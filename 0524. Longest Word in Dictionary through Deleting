Given a string and a string dictionary, find the longest string in the dictionary that can be formed by deleting some characters of the given string. If there are more than one possible results, return the longest word with the smallest lexicographical order. If there is no possible result, return the empty string.

Example 1:
Input:
s = "abpcplea", d = ["ale","apple","monkey","plea"]

Output: 
"apple"
Example 2:
Input:
s = "abpcplea", d = ["a","b","c"]

Output: 
"a"
Note:
All the strings in the input will only contain lower-case letters.
The size of the dictionary won't exceed 1,000.
The length of all the strings in the input won't exceed 1,000.

~~~~~~~~~~~~~~~~
"""
2个指针，1个指针i指向单词s的字母，另一个指针j指向词典里单词的字母
O(n * x): x是字典中单词的平均长度
O(x): 存储单词
"""
class Solution:
    def findLongestWord(self, s: str, d: List[str]) -> str:
        res = ""
        for st in d:
            j = 0
            for i in range(len(s)):
                if j < len(st):
                    if s[i] == st[j]:
                        j += 1
                    if j == len(st):
                        if j > len(res) or (len(res) == j and st < res):
                            res = st
        
        return res
