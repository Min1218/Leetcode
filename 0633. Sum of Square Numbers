Given a non-negative integer c, decide whether there're two integers a and b such that a2 + b2 = c.

 

Example 1:

Input: c = 5
Output: true
Explanation: 1 * 1 + 2 * 2 = 5
Example 2:

Input: c = 3
Output: false
Example 3:

Input: c = 4
Output: true
Example 4:

Input: c = 2
Output: true
Example 5:

Input: c = 1
Output: true
 

Constraints:

0 <= c <= 231 - 1

~~~~~~~~~~~~~~~~~~~
"""
用二分法找到right值
再用双指针
O(logc); O(1)
"""
class Solution:
    def judgeSquareSum(self, c: int) -> bool:
        left, right = 0, self.sqrt(c)
        while left <= right:
            s = left * left + right * right
            if s == c:
                return True
            if s < c:
                left += 1
            else:
                right -= 1
        return False
    def sqrt(self, num):
        if num == 1 or num == 0:
            return num
        left, right = 1, num // 2
        while left < right:
            mid = (left + right) // 2
            if mid * mid == num:
                break
            if mid * mid < num:
                left = mid + 1
            else:
                right = mid
        return right
