Given two binary strings a and b, return their sum as a binary string.

 

Example 1:

Input: a = "11", b = "1"
Output: "100"
Example 2:

Input: a = "1010", b = "1011"
Output: "10101"
 

Constraints:

1 <= a.length, b.length <= 104
a and b consist only of '0' or '1' characters.
Each string does not contain leading zeros except for the zero itself.
~~~~~~~~~~~~~~~~~~

"""
Time complexity : O(N+M), where N and M are lengths of the input strings a and b.
Space complexity : O(max(N,M)) to keep the answer.
"""
class Solution:
    def addBinary(self, a: str, b: str) -> str:
        
        if not a and not b:
            return 0
        res, carry, digit = list(), 0, 0
        size1, size2 = len(a), len(b)
        
        while size1 or size2 or carry:
            if size1:
                carry += int(a[size1-1])
                size1 -= 1
            if size2:
                carry += int(b[size2 - 1])
                size2 -= 1
            res.append(str(carry % 2))
            carry = carry // 2
        
        return ''.join(res[::-1])
