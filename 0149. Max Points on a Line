Given an array of points where points[i] = [xi, yi] represents a point on the X-Y plane, return the maximum number of points that lie on the same straight line.

 

Example 1:


Input: points = [[1,1],[2,2],[3,3]]
Output: 3
Example 2:


Input: points = [[1,1],[3,2],[5,3],[4,1],[2,3],[1,4]]
Output: 4
 

Constraints:

1 <= points.length <= 300
points[i].length == 2
-104 <= xi, yi <= 104
All the points are unique.

~~~~~~~~~~~~~~~~~~~~~~~~~~~

"""
reference: https://leetcode-cn.com/problems/max-points-on-a-line/solution/python3-zi-dian-xie-lu-149-by-lionking_njuer/
嵌套遍历；
注意重复的点，因为重复的点可以是任意斜率；
注意竖线的斜率；
注意除法的精度。
O(n^2); O(n)
"""
class Solution:
    def maxPoints(self, points: List[List[int]]) -> int:
        
        res = 0
        if not points:
            return res
        
        for i in range(len(points)):
            dic = {}
            same = 0
            curMax = 0
            
            for j in range(i+1, len(points)):
                if points[i] == points[j]:
                    same += 1
                    continue
                if (points[i][0] - points[j][0]) == 0:
                    rate = float('inf')
                else:
                    rate = (points[i][1] - points[j][1]) * 1000 / (points[i][0] - points[j][0]) * 1000
                dic[rate] = dic.get(rate, 0) + 1
                curMax = max(curMax, dic[rate])
            res = max(res, curMax+same+1)
            
        return res

