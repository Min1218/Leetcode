Given an unsorted array of integers nums, return the length of the longest consecutive elements sequence.

Follow up: Could you implement the O(n) solution? 

 

Example 1:

Input: nums = [100,4,200,1,3,2]
Output: 4
Explanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.
Example 2:

Input: nums = [0,3,7,2,5,8,4,6,0,1]
Output: 9
 

Constraints:

0 <= nums.length <= 104
-109 <= nums[i] <= 109

~~~~~~~~~~
"""
1.用set去重；2.遍历数，若当前数-1不存在set中，则当前的数为起始点，找其开始的最长连续序列
O(n); O(n)
"""
class Solution:
    def longestConsecutive(self, nums: List[int]) -> int:
        nums_set = set(nums)
        max_length = 0
        
        for num in nums_set:
            if num - 1 not in nums_set:
                cur_length = 1
                cur_num = num
                
                while cur_num + 1 in nums_set:
                    cur_num += 1
                    cur_length += 1
                max_length = max(max_length, cur_length)
            
        return max_length
