Given a non-empty string s, you may delete at most one character. Judge whether you can make it a palindrome.

Example 1:
Input: "aba"
Output: True
Example 2:
Input: "abca"
Output: True
Explanation: You could delete the character 'c'.
Note:
The string will only contain lowercase characters a-z. The maximum length of the string is 50000.

~~~~~~~~~~~~~~
"""
O(n); O(1)
"""
class Solution:
    def validPalindrome(self, s: str) -> bool:
        def isValid(left, right):
            while left < right:
                if s[left] != s[right]:
                    return False
                else:
                    left, right = left + 1, right - 1
            return True
        
        left, right = 0, len(s) - 1
        cnt = 0
        
        while left < right:
            if s[left] == s[right]:
                left, right = left + 1, right - 1
            elif s[left] != s[right]:
                return isValid(left, right - 1) or isValid(left + 1, right)
        return True
