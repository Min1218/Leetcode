Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
 

Example 1:

Input: s = "()"
Output: true
Example 2:

Input: s = "()[]{}"
Output: true
Example 3:

Input: s = "(]"
Output: false
Example 4:

Input: s = "([)]"
Output: false
Example 5:

Input: s = "{[]}"
Output: true
 

Constraints:

1 <= s.length <= 104
s consists of parentheses only '()[]{}'.
~~~~~~~~~~~~
"""
栈：先入后出；括号排序：左括号先入，遇到右括号将对应的栈顶左括号出栈，直到栈为空
https://leetcode-cn.com/problems/valid-parentheses/solution/valid-parentheses-fu-zhu-zhan-fa-by-jin407891080/
O(n); O(n)
"""
class Solution:
    def isValid(self, s: str) -> bool:
        lookup = {')':'(', '}':'{', ']':'['}
        stack = []
        for c in s:
            if c not in lookup:
                stack.append(c)
            elif not stack or lookup[c] != stack.pop():
                return False
        
        return not stack
                
